name: build-on-pre-release

on:
  release:
    types: [prereleased]

env:
  NAME_SPACE: myapp-k8s-dev

jobs:
  build:
    runs-on: ubuntu-latest 
    outputs:
      image_tag_name: ${{ steps.build_image.outputs.image_tag_name }} 

    steps:
      - name: Check Out Repository
        uses: actions/checkout@v3 

      - name: Set Up Google Cloud SDK
        uses: 'google-github-actions/auth@v2'
        with:
          version: 'latest'
          credentials_json: ${{ secrets.GCP_KEY }} 

      - name: Authenticate Docker to GCR
        run: |
          gcloud auth configure-docker  us-central1-docker.pkg.dev

      - name: Tagging
        run: |
          
          TAG_NAME=${{ github.event.release.tag_name }} 
          echo "${TAG_NAME}" 
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV 

      - name: Build Docker Image
        id: build_image
        run: |
          IMAGE_NAME="us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-app-ms-repository/pyappapi"
          docker build -t ${IMAGE_NAME}:${{ env.TAG_NAME }} . 
          echo "::set-output name=image_tag_name::${IMAGE_NAME}::${{ env.TAG_NAME }}"
      
      - name: Push Docker Image to GCR
        run: | 
          IMAGE_NAME="us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-app-ms-repository/pyappapi"
          docker push ${IMAGE_NAME}:${{ env.TAG_NAME }}

  deploy:
    runs-on: ubuntu-latest 
    needs: build
    steps:
    # Check out the repository
    - name: Check Out Code
      uses: actions/checkout@v3

    - name: Set Up Google Cloud SDK
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_KEY }} 

    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: myk8-cluster
        location: us-central1-c 
 
    
    - name: Deploy to Kubernetes Cluster
      run: |    
        export NAME_SPACE=${{ env.NAME_SPACE }} 
        export IMAGE_NAME=${{ needs.build.outputs.image_tag_name }}
        envsubst < deployment.yaml > updated-deployment.yaml
        envsubst < service.yaml > updated-service.yaml
        kubectl apply -f updated-deployment.yaml
        kubectl apply -f updated-service.yaml

          
